!    Including file for parameters and constants used  in the entire SPH software packages.
!    
!    dim : Dimension of the problem (1, 2 or 3)
     INTEGER, PARAMETER :: dim = 2
     
!    maxn : Maximum number of particles
!    max_interation : Maximum number of interaction pairs
     INTEGER, PARAMETER ::  maxn = 12000
     INTEGER, PARAMETER :: max_interaction = 100 * maxn 

! Parameters for the computational geometry,
!   x_maxgeom : Upper limit of allowed x-regime
!   x_mingeom : Lower limit of allowed x-regime
!   y_maxgeom : Upper limit of allowed y-regime
!   y_mingeom : Lower limit of allowed y-regime
!   z_maxgeom : Upper limit of allowed z-regime
!   z_mingeom : Lower limit of allowed z-regime

    REAL(KIND=8), PARAMETER :: x_maxgeom = 10.0D0
    REAL(KIND=8), PARAMETER :: x_mingeom = -10.0D0
    REAL(KIND=8), PARAMETER :: y_maxgeom = 10.0D0
    REAL(KIND=8), PARAMETER :: y_mingeom = -10.0D0
    REAL(KIND=8), PARAMETER :: z_maxgeom = 10.0D0
    REAL(KIND=8), PARAMETER :: z_mingeom = -10.0D0
!
! SPH algorithm for particle approximation (pa_sph)
! pa_sph = 1 : (e.g. (p(i)+p(j))/(rho(i)*rho(j))
!          2 : (e.g. (p(i)/rho(i)**2+p(j)/rho(j)**2)

  INTEGER, PARAMETER :: pa_sph = 2

! Nearest neighboring particle searching (nnps) method
! nnps = 1 : Simplest and direct searching
!        2 : Sorting grid linked list
!        3 : Tree algorithm

 INTEGER, PARAMETER :: nnps = 1
!
! Smoothing length evolution (sle) algorithm
! sle = 0 : Keep unchanged,
!       1 : h = fac * (m/rho)*(1/dim)
!       2 : dh/dt - (-I/dim)*(h/rho)*(drho/dt)
!       3 : Other approaches (e.g. h = h_0*(rho_0/rho)**(1/dim) )

  INTEGER, PARAMETER :: sle = 0

! Smoothing kernel function
! skf = 1, cubic spline kernel by W4 - Spline (Monaghan 1985)
!     = 2, Gauss kernel (Gingold and Monaghan 1981)
!     = 3, Quintic kernel (Morris 1997)

  INTEGER, PARAMETER :: skf = 1

! Switches for different senarios

! summation_density = .TRUE. : Use density summation model in the code,
!                     .FALSE.: Use continuiity equation
! average_velocity = .TRUE. : Monaghan treatment on average velocity,
!                    .FALSE.: No average treatment.
! config_input = .TRUE. : Load initial configuration data,
!                .FALSE. : Generate initial configuration.
! virtual_part = .TRUE. : Use vritual particle,
!                .FALSE.: No use of vritual particle.
! vp_input = .TRUE. : Load virtual particle information,
!            .FALSE.: Generate virtual particle information.
! visc = .TRUE. : Consider viscosity,
!        .FALSE.: No viscosity.
! ex_force =.TRUE. : Consider external force,
!           .FALSE.: No external force.
! visc_artificial = .TRUE. : Consider artificial viscosity,
!                   .FALSE.: No considering of artificial viscosity.
! heat_artificial = .TRUE. : Consider artificial heating,
!                   .FALSE.: No considering of artificial heating.
! self_gravity = .TRUE. : Considering self_gravity,
!                .FALSE.: No considering of self_gravity
! nor_density = .TRUE. : Density normalization by using CSPM,
!               .FALSE.: No normalization.

  LOGICAL, PARAMETER :: summation_density = .TRUE. 
  LOGICAL, PARAMETER :: average_velocity = .TRUE. 
  LOGICAL, PARAMETER :: config_input = .FALSE.
  LOGICAL, PARAMETER :: virtual_part = .TRUE.
  LOGICAL, PARAMETER :: vp_input = .FALSE.
  LOGICAL, PARAMETER :: visc = .TRUE.
  LOGICAL, PARAMETER :: ex_force = .TRUE.
  LOGICAL, PARAMETER :: visc_artificial = .FALSE.
  LOGICAL, PARAMETER :: heat_artificial = .FALSE.
  LOGICAL, PARAMETER :: self_gravity = .FALSE.
  LOGICAL, PARAMETER :: nor_density = .TRUE.

! Symmetry of the problem
! nsym = 0 : no symmetry,
!      = 1 : axis symmetry,
!      = 2 : center symmetry.

  INTEGER, PARAMETER :: nsym = 0

! Control parameters for output
! int_stat = .true. : Print statistics about SPH particle interactions  including virtual particle information.
! print_step: Print Timestep (On Screen)
! save_step : Save Timestep (To Disk File)
! moni_particle: The particle number for information monitoring.


  LOGICAL, PARAMETER :: int_stat = .TRUE.

  INTEGER, PARAMETER :: print_step = 100
  INTEGER, PARAMETER :: save_step = 500
  INTEGER, PARAMETER :: moni_particle = 1600

  REAL(KIND=8), PARAMETER :: pi = 3.14159265358979323846

! Simulation cases
! shocktube = .TRUE. : carry out shock tube simulation
! shearcavity = .TRUE. : carry out shear cavity simulation

LOGICAL, PARAMETER :: shocktube = .FALSE.
LOGICAL, PARAMETER :: shearcavity = .TRUE.
